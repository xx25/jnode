/*
 * Licensed to the jNode FTN Platform Develpoment Team (jNode Team)
 * under one or more contributor license agreements.
 * See the NOTICE file distributed with this work for 
 * additional information regarding copyright ownership.  
 * The jNode Team licenses this file to you under the 
 * Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package jnode.robot;

import jnode.dto.Link;
import jnode.dto.LinkOption;
import jnode.ftn.FtnTools;
import jnode.ftn.types.FtnMessage;
import jnode.logger.Logger;
import jnode.main.MainHandler;

/**
 * PING Robot implementation according to FTSC specifications
 * 
 * Responds to messages addressed to user "PING" (case insensitive)
 * Bounces the message back to sender with quoted via lines
 * Works with any node in the nodelist without authentication
 * 
 * To enable: INSERT INTO robots (robot, className, enabled) VALUES ('ping', 'jnode.robot.PingRobot', true);
 * 
 * @author Claude Code
 */
public class PingRobot implements IRobot {
    
    private final Logger logger = Logger.getLogger(getClass());
    
    @Override
    public void execute(FtnMessage fmsg) throws Exception {
        logger.l4("PING robot processing message from " + fmsg.getFromAddr());
        
        // PING robot responds by bouncing message back with via lines
        String responseText = createPingResponse(fmsg);
        
        // Send response back to original sender (never to "PING")
        FtnTools.writeReply(fmsg, "PING Response", responseText);
        
        logger.l3("PING response sent to " + fmsg.getFromAddr());
    }
    
    private String createPingResponse(FtnMessage fmsg) {
        StringBuilder sb = new StringBuilder();
        sb.append("PING Response\n");
        sb.append("=============\n\n");
        sb.append("Your PING message has reached its final destination.\n\n");
        sb.append("Original message details:\n");
        sb.append("From: ").append(fmsg.getFromName()).append(" (").append(fmsg.getFromAddr()).append(")\n");
        sb.append("To: ").append(fmsg.getToName()).append(" (").append(fmsg.getToAddr()).append(")\n");
        sb.append("Subject: ").append(fmsg.getSubject()).append("\n");
        sb.append("Date: ").append(fmsg.getDate()).append("\n\n");
        
        // Quote all original via lines
        sb.append("Via lines from original message:\n");
        sb.append("--------------------------------\n");
        if (fmsg.getVia() != null && !fmsg.getVia().isEmpty()) {
            for (String via : fmsg.getVia()) {
                sb.append(" * ").append(via).append("\n");
            }
        } else {
            sb.append("(No via lines found)\n");
        }
        
        sb.append("\n--- PING Response generated by jNode ---\n");
        return sb.toString();
    }
    
}